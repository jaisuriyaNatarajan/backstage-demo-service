// TemplateCard.jsx
import React from "react";
import styled from "styled-components";
import { Star, Info } from "lucide-react";

/* ---------- design tokens ---------- */
const TOKENS = {
  radiusLg: "16px",
  radiusSm: "10px",
  radiusRound: "999px",
  border: "1px solid #E9E9EE",
  surface: "#FFFFFF",
  textPrimary: "#1F2937",
  textSecondary: "#6B7280",
  divider: "#EAEAF0",
  tagBg: "#F1EFFE",
  tagText: "#6E56CF",
  iconChipBorder: "#E9E9EE",
  iconChipBg: "#FFFFFF",
  link: "#6E56CF",
  cta: "#7C3AED",
  ctaHover: "#6D28D9",
};

/* --------------------- styled pieces --------------------- */
const Card = styled.article`
  background: ${TOKENS.surface};
  border: ${TOKENS.border};
  border-radius: ${TOKENS.radiusLg};
  padding: 20px;
  width: 100%;
  max-width: 560px;
  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.02);
  font-family: Inter, system-ui, -apple-system, Segoe UI, Roboto, "Helvetica Neue",
    Arial, "Noto Sans";
`;

const TopRow = styled.div`
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 12px;
`;

const Tag = styled.span`
  display: inline-flex;
  align-items: center;
  height: 24px;
  padding: 0 12px;
  border-radius: ${TOKENS.radiusRound};
  font-size: 12px;
  font-weight: 600;
  letter-spacing: 0.02em;
  background: ${TOKENS.tagBg};
  color: ${TOKENS.tagText};
`;

const IconTray = styled.div`
  display: inline-flex;
  gap: 10px;
`;

const IconChip = styled.button`
  width: 36px;
  height: 36px;
  border-radius: ${TOKENS.radiusRound};
  border: 1px solid ${TOKENS.iconChipBorder};
  background: ${TOKENS.iconChipBg};
  display: grid;
  place-items: center;
  cursor: pointer;
  transition: transform 120ms ease, box-shadow 120ms ease;

  &:hover {
    transform: translateY(-1px);
    box-shadow: 0 2px 10px rgba(17, 24, 39, 0.08);
  }

  svg {
    width: 18px;
    height: 18px;
    color: #6b7280; /* neutral-500 */
  }
`;

const Title = styled.h3`
  margin: 14px 0 8px 0;
  font-size: 20px;
  line-height: 1.2;
  font-weight: 700;
  color: ${TOKENS.textPrimary};
`;

const Divider = styled.hr`
  border: 0;
  height: 1px;
  background: ${TOKENS.divider};
  margin: 8px 0 14px 0;
`;

const SectionTitle = styled.h4`
  margin: 0 0 8px 0;
  font-size: 14px;
  font-weight: 700;
  color: ${TOKENS.textPrimary};
`;

const Paragraph = styled.p`
  margin: 0 0 10px 0;
  font-size: 14px;
  line-height: 1.45;
  color: ${TOKENS.textSecondary};
`;

const Footer = styled.footer`
  margin-top: 12px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 12px;
`;

const RepoLink = styled.a`
  font-size: 14px;
  font-weight: 600;
  color: ${TOKENS.link};
  text-decoration: none;

  &:hover {
    text-decoration: underline;
  }
`;

const ChooseBtn = styled.button`
  padding: 12px 22px;
  border: 0;
  border-radius: ${TOKENS.radiusSm};
  background: ${TOKENS.cta};
  color: #fff;
  font-size: 15px;
  font-weight: 600;
  letter-spacing: 0.01em;
  cursor: pointer;
  transition: background 120ms ease, transform 120ms ease;

  &:hover {
    background: ${TOKENS.ctaHover};
    transform: translateY(-1px);
  }
`;

/* --------------------- component --------------------- */
export default function TemplateCard({
  tag = "Website",
  name = "Template Name",
  section = "Title",
  descriptionTop = "plugin for Backstage provides real-time weather information for a specified location using the Weatherstack API",
  descriptionBottom = "plugin for Backstage provides real-time weather information for a specified location using the Weatherstack API",
  repoText = "backstage/maintainers",
  onStar,
  onInfo,
  onChoose,
}) {
  return (
    <Card>
      <TopRow>
        <Tag>{tag}</Tag>
        <IconTray>
          <IconChip aria-label="Star" onClick={onStar}>
            <Star strokeWidth={2} />
          </IconChip>
          <IconChip aria-label="Info" onClick={onInfo}>
            <Info strokeWidth={2} />
          </IconChip>
        </IconTray>
      </TopRow>

      <Title>{name}</Title>
      <Divider />

      <SectionTitle>{section}</SectionTitle>
      <Paragraph>{descriptionTop}</Paragraph>
      <Paragraph>{descriptionBottom}</Paragraph>

      <Footer>
        <RepoLink href="#">{repoText}</RepoLink>
        <ChooseBtn onClick={onChoose}>Choose</ChooseBtn>
      </Footer>
    </Card>
  );
}
