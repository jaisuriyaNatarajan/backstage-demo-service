import React, { useEffect, useState } from 'react';
import {
  Grid,
  Card,
  CardContent,
  Typography,
  List,
  ListItem,
  ListItemText,
  CircularProgress,
  Box,
} from '@material-ui/core';
import { Link, useLocation } from 'react-router-dom';
import type { Visit } from '@backstage/plugin-home';

// Helper to build the localStorage key dynamically
function getVisitStorageKey(userEntityRef = 'user:development/guest'): string {
  return (
    '/' + encodeURIComponent(`@backstage/plugin-home:visits:${userEntityRef}`)
  );
}

function loadStoredVisits(userEntityRef = 'user:development/guest'): Visit[] {
  const key = getVisitStorageKey(userEntityRef);
  const json = localStorage.getItem(key);
  if (!json) return [];
  try {
    return JSON.parse(json) as Visit[];
  } catch (e) {
    console.error('Error parsing visits data:', e);
    return [];
  }
}

interface CustomTopVisitedProps {
  maxItems?: number;
  userEntityRef?: string;
}

const CustomTopVisited = ({
  maxItems = 5,
  userEntityRef = 'user:development/guest',
}: CustomTopVisitedProps) => {
  const [items, setItems] = useState<Visit[] | null>(null);
  const location = useLocation();

  useEffect(() => {
    const visits = loadStoredVisits(userEntityRef)
      .sort((a, b) => b.hits - a.hits)
      .slice(0, maxItems);
    setItems(visits);
  }, [location.pathname, maxItems, userEntityRef]);

  if (items === null) {
    return <CircularProgress />;
  }

  if (items.length === 0) {
    return (
      <Card
        style={{ backgroundColor: '#eef6fc', borderLeft: '6px solid #007cc2' }}
      >
        <CardContent>
          <Typography
            variant="h6"
            style={{ color: '#003366', fontWeight: 600 }}
          >
            Top Visited Pages (Custom)
          </Typography>
          <Typography>No visits recorded yet.</Typography>
        </CardContent>
      </Card>
    );
  }

  return (
    <Card
      style={{ backgroundColor: '#eef6fc', borderLeft: '6px solid #007cc2' }}
    >
      <CardContent>
        <Typography variant="h6" style={{ color: '#003366', fontWeight: 600 }}>
          Top Visited Pages
        </Typography>
        <List dense>
          {items.map(visit => (
            <ListItem
              key={visit.id}
              button
              component={Link}
              to={visit.pathname}
              style={{ borderBottom: '1px solid #eee' }}
            >
              <ListItemText
                primary={visit.name || visit.pathname}
                secondary={`Visited ${visit.hits} times`}
              />
            </ListItem>
          ))}
        </List>
      </CardContent>
    </Card>
  );
};

const FrequentlyVisited = ({
  maxItems = 5,
  userEntityRef = 'user:development/guest',
}: CustomTopVisitedProps) => {
  const [items, setItems] = useState<Visit[] | null>(null);
  const location = useLocation();

  useEffect(() => {
    const visits = loadStoredVisits(userEntityRef)
      .filter(v => v.hits > 1)
      .sort((a, b) => b.hits - a.hits)
      .slice(0, maxItems);
    setItems(visits);
  }, [location.pathname, maxItems, userEntityRef]);

  if (items === null) {
    return <CircularProgress />;
  }

  if (items.length === 0) {
    return (
      <Card
        style={{ backgroundColor: '#fff6e5', borderLeft: '6px solid #e6a100' }}
      >
        <CardContent>
          <Typography
            variant="h6"
            style={{ color: '#996700', fontWeight: 600 }}
          >
            Frequently Visited Pages
          </Typography>
          <Typography>No frequent visits recorded yet.</Typography>
        </CardContent>
      </Card>
    );
  }

  return (
    <Card
      style={{ backgroundColor: '#fff6e5', borderLeft: '6px solid #e6a100' }}
    >
      <CardContent>
        <Typography variant="h6" style={{ color: '#996700', fontWeight: 600 }}>
          Frequently Visited Pages
        </Typography>
        <List dense>
          {items.map(visit => (
            <ListItem
              key={visit.id}
              button
              component={Link}
              to={visit.pathname}
              style={{ borderBottom: '1px solid #eee' }}
            >
              <ListItemText
                primary={visit.name || visit.pathname}
                secondary={`Visited ${visit.hits} times`}
              />
            </ListItem>
          ))}
        </List>
      </CardContent>
    </Card>
  );
};

export const HomePage = () => {
  return (
    <Box
      display="flex"
      justifyContent="center"
      alignItems="center"
      mt={4}
      flexWrap="wrap"
    >
      <Box width={400}>
        <CustomTopVisited maxItems={5} />
      </Box>
      <Box width={400}>
        <FrequentlyVisited maxItems={5} />
      </Box>
    </Box>
  );
};


